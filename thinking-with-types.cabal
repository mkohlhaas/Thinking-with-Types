cabal-version: 2.4
name:          thinking-with-types
version:       0.1.0.0
build-type:    Simple

library
    exposed-modules:
        AdHocSingletons
        Algebra
        Commander
        Constraints
        Database
        Defunc
        DeriveAnyClass
        FCTF
        GADTs
        Generic.Monoid
        Generic.Omit
        JSONSchema
        Kan
        Kinds
        Misc
        NoImpredicativeTypes
        OpenProduct
        OpenSum
        PosNeg
        Printf
        PrintfTypes
        QuantifiedConstraints
        RankN
        Roles
        ST
        Sigma
        Singletons
        SingletonsTH
        TicTacToe
        TypeApps
        War.Age
        War.Ecstasy
        War.Polysemy
        War.Refinery

    hs-source-dirs:     app
    default-language:   Haskell2010
    default-extensions:
        BangPatterns BinaryLiterals ConstrainedClassMethods ConstraintKinds
        DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric
        DeriveLift DeriveTraversable DoAndIfThenElse EmptyCase
        EmptyDataDecls EmptyDataDeriving ExistentialQuantification
        ExplicitForAll FlexibleContexts FlexibleInstances
        ForeignFunctionInterface GADTSyntax GeneralisedNewtypeDeriving
        HexFloatLiterals ImplicitPrelude ImportQualifiedPost InstanceSigs
        KindSignatures MonomorphismRestriction MultiParamTypeClasses
        NamedFieldPuns NumericUnderscores PatternGuards PolyKinds
        PostfixOperators RankNTypes RelaxedPolyRec ScopedTypeVariables
        StandaloneDeriving StandaloneKindSignatures StarIsType
        TraditionalRecordSyntax TupleSections TypeApplications
        TypeOperators TypeSynonymInstances

    ghc-options:        -Wall
    build-depends:
        aeson,
        base,
        bytestring,
        constraints,
        containers,
        first-class-families,
        inspection-testing,
        kan-extensions,
        kind-generics,
        kind-generics-th,
        lens,
        mtl,
        singletons,
        singletons-base,
        singletons-th,
        text,
        transformers,
        vector,
        witherable
